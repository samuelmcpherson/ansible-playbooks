---
- name: create zfs datasets
  when: zfs_root|bool == true
  block:
    - name: create zfs user datasets
      community.general.zfs:
        name: "zroot/DATA/home/{{ user }}/{{ item }}"
        state: present
        extra_zfs_properties:
          canmount: on
          mountpoint: "/home/{{ user }}/{{ item }}"
      loop: "{{ zfs_user_datasets }}"

    - name: create zfs flatpak datasets
      community.general.zfs:
        name: "zroot/DATA/home/{{ user }}/{{ item }}"
        state: present
        extra_zfs_properties:
          canmount: on
          mountpoint: "/home/{{ user }}/{{ item }}"
      loop: "{{ zfs_flatpak_datasets }}"

    - name: create zfs extra datasets
      community.general.zfs:
        name: "zroot/DATA/home/{{ user }}/{{ item }}"
        state: present
        extra_zfs_properties:
          canmount: on
          mountpoint: "/home/{{ user }}/{{ item }}"
      loop: "{{ zfs_extra_datasets }}"

- name: create directories or fix ownership on user zfs datasets
  file:
    path: "/home/{{ user }}/{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: users
    mode: '755'
  loop: "{{ zfs_user_datasets }}"

- name: create directories or fix ownership on flatpak zfs datasets
  file:
    path: "/home/{{ user }}/{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: users
    mode: '755'
  loop: "{{ zfs_flatpak_datasets }}"

- name: create directories or fix ownership on extra zfs datasets
  file:
    path: "/home/{{ user }}/{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: users
    mode: '755'
  loop: "{{ zfs_extra_datasets }}"

- name: install plasma desktop
  apt:  
    name: 
      - gnome
      - network-manager  
    state: latest

- name: install extra desktop apps
  apt:
    name: "{{ desktop_apps }}"
    state: latest

- name: add main user to additional groups 
  user:
    name: "{{ user }}"
    groups: 
      - audio
      - video
      - games 
      - input
    append: yes
    create_home: no

- name: setup package architecture config file
  lineinfile: 
    state: present
    create: yes
    dest: "/var/lib/dpkg/arch"
    regexp: "amd64"
    line: "amd64"

- name: setup architecture for games
  lineinfile: 
    state: present
    create: yes
    dest: "/var/lib/dpkg/arch"
    regexp: "i386"
    line: "i386"

- name: update repositories
  apt: 
    update_cache: yes
    upgrade: safe
  changed_when: False

- name: accept steam license
  debconf:
    name: "steam"
    question: "steam/question"
    value: "I AGREE"
    vtype: "select"

- name: install game packages
  apt:
    name: "{{ game_apps }}"
    state: latest

- name: touchscreen configurations 
  when: touchscreen|bool == true
  block:
    # - name: install touchscreen packages
    #   apt:
    #     name: "{{ touchscreen_apps }}"
    #     state: latest
    
    - name: configure firefox touch scrolling
      lineinfile: 
        state: present
        path: "/etc/security/pam_env.conf"
        regexp: 'MOZ_USE_XINPUT2 DEFAULT=1'
        line: 'MOZ_USE_XINPUT2 DEFAULT=1'

- name: add the flathub flatpak repository remote to system
  become_user: "{{ user }}"
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: user

- name: add flatpaks to system
  become_user: "{{ user }}"
  community.general.flatpak:
    state: present
    remote: flathub
    method: user
    name: "{{ item }}"
  loop: "{{ flatpak_apps }}"

- name: create systemd user mode directories
  file:
    path: "/home/{{ user }}/.config/systemd/user/default.target.wants"
    state: directory
    owner: "{{ user }}"
    group: users
    mode: '751'

- name: enable profile sync daemon service for main user
  file:
    src: /usr/lib/systemd/user/psd.service
    path: "/home/{{ user }}/.config/systemd/user/default.target.wants/psd.service"
    state: link
    owner: "{{ user }}"
    group: users

- name: copy wallpaper
  copy:
    src: "../files/wallpaper/contents"
    dest: "/usr/share/wallpapers/Next"
    mode: '755'

- name: copy .config/autostart directory
  copy:
    src: "../files/.config/autostart"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy .conkyrc2 file
  copy:
    src: "../files/.conkyrc2"
    dest: "/home/{{ user }}"
    owner: "{{ user }}"
    group: users
    mode: '644'

- name: copy .conkyrc.j2 template
  template:
    src: "../templates/.conkyrc.j2"
    dest: "/home/{{ user }}/.conkyrc"
    owner: "{{ user }}"
    group: users
    mode: '644'

- name: setup flatpak discovery in /etc/zsh/zprofile
  lineinfile:
    state: present
    path: "/etc/zsh/zprofile"
    regexp: 'emulate sh -c "source /etc/profile.d/flatpak.sh"'
    line: 'emulate sh -c "source /etc/profile.d/flatpak.sh"'

- name: setup conky2 autostart config file
  lineinfile: 
    state: present
    create: yes
    dest: "/home/{{ user }}/.config/autostart/conky2.desktop"
    owner: "{{ user }}"
    group: users
    mode: '755'
    regexp: '^Exec='
    line: "Exec=conky -c /home/{{ user }}/.conkyrc2 --daemonize --pause=1"

- name: remove old network configuration
  file:
    path: "/etc/network/interfaces.d"
    state: absent