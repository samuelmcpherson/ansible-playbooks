---
- name: update repositories
  apt: 
    update_cache: yes
    upgrade: safe
  changed_when: False

- name: install utilities
  apt:
    name: 
      - bridge-utils
      - python3-proxmoxer
    state: present

- name: check proxmox network configuration has already been setup
  when: ansible_default_ipv4.interface != 'vmbr0'
  block:
    - name: copy /etc/network/interfaces.j2 template
      template:
        src: "../templates/interfaces.j2"
        dest: "/etc/network/interfaces"
        owner: root
        group: root
        mode: '644'

    - name: "remove interface configs in /etc/network/interfaces.d"
      file:
        path: "/etc/network/interfaces.d"
        state: absent

    - name: "reboot for network interface changes"
      reboot:
        msg: "Rebooting to apply network interface changes"
        pre_reboot_delay: 60
        post_reboot_delay: 60

- name: manage proxmox network interfaces 
  block: 
    - name: setup unused interfaces
      when: item.type == 'unused_interface'
      blockinfile:
        path: /home/ansible/test-interfaces
        marker: "### {mark} ansible managed {{ item.name }} config"
        block: |
          ###
          # {{ item.comment }}
          iface {{ item.name }} inet manual
          ###

    - name: setup bridge interfaces
      when: item.type == 'bridge_interface'
      blockinfile:
        path: /home/ansible/test-interfaces
        marker: "### {mark} ansible managed {{ item.name }} config"
        block: |
          ###
          # {{ item.comment }}
          auto {{ item.name }}
          iface {{ item.name }} inet static
                address {{ item.address }}
                gateway {{ item.gateway }}
                bridge-ports {{ item.bridged_port }}
                bridge-stp off
                bridge-fd 0
          {% if vlans is defined %}
                bridge-vlan-aware yes
                bridge-vids {% for vlan in vlans %} {{ vlan.id }} {% endfor %}
          {% endif %}

          ###
      loop: "{{ proxmox_interfaces }}" 

    - name: setup directly connected interfaces
      when: item.type == 'direct_connection'
      blockinfile:
        path: /home/ansible/test-interfaces
        marker: "### {mark} ansible managed {{ item.name }} config"
        block: |
          ###
          # {{ item.comment }}
          auto {{ item.name }}
          iface {{ item.name }} inet static
                address {{ item.address }}
                {{ item.up_route }}
                {{ item.down_route }}
          ###
      loop: "{{ proxmox_interfaces }}" 

- name: create proxmox datasets
  when: zfs_root|bool == true
  include_tasks: zfs-proxmox-datasets.yaml

- name: remove zfs dkms
  ignore_errors: True
  apt:
    name: zfs-dkms
    state: absent

- name: set mailname for postfix
  debconf: 
    name: postifx
    question: postfix/mailname
    value: "{{ hostname }}.{{ domain }}"
    vtype: string

- name: set mailer type for postfix
  debconf: 
    name: postfix
    question: postfix/main_mailer_type
    value: "Local Only"
    vtype: string

- name: install postfix
  apt: 
    name: postfix
    state: present

