---
- name: create zfs user datasets
  when: zfs_root|bool == true
  community.general.zfs:
    name: "zroot/DATA/{{ item }}"
    state: present
    extra_zfs_properties:
      canmount: on
      mountpoint: "/{{ item }}"
  loop: "{{ zfs_user_datasets }}"

- name: create directories or fix ownership on user zfs datasets
  file:
    path: "/{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: users
    mode: '750'
  loop: "{{ zfs_user_datasets }}"

- name: install desktop apps
  apt:
    name: "{{ desktop_apps }}"
    state: latest

- name: install extra desktop apps
  apt:
    name: "{{ extra_desktop_apps }}"
    state: latest

- name: disable wifi powersave setting
  blockinfile:
    create: true
    owner: root
    group: root
    mode: '644'
    path: "/etc/NetworkManager/conf.d/wifi-powersave-off.conf"
    marker: "### {mark} ansible managed wifi powersave config"
    block: |
      ###
      # File to be place under /etc/NetworkManager/conf.d
      [connection]
      # Values are 0 (use default), 1 (ignore/don't touch), 2 (disable) or 3 (enable).
      wifi.powersave = 2
      ###

- name: add main user to additional groups 
  user:
    name: "{{ user }}"
    groups: 
      - audio
      - video
      - games 
    append: yes
    create_home: no

- name: create systemd user mode directories
  file:
    path: "/home/{{ user }}/.config/systemd/user/default.target.wants"
    state: directory
    owner: "{{ user }}"
    group: users
    mode: '751'

- name: enable profile sync daemon service for main user
  file:
    src: /usr/lib/systemd/user/psd.service
    path: "/home/{{ user }}/.config/systemd/user/default.target.wants/psd.service"
    state: link
    owner: "{{ user }}"
    group: users

- name: create .config/autostart directory
  file:
    path: "/home/{{ user }}/.config/autostart"
    state: directory
    owner: "{{ user }}"
    group: users
    mode: '750'

- name: copy conky.desktop autostart file
  copy:
    src: "../files/.config/autostart/conky.desktop"
    dest: "/home/{{ user }}/.config/autostart"
    owner: "{{ user }}"
    group: users
    mode: '640'

- name: copy conky2.desktop autostart file
  copy:
    src: "../files/.config/autostart/conky2.desktop"
    dest: "/home/{{ user }}/.config/autostart"
    owner: "{{ user }}"
    group: users
    mode: '640'

- name: copy .conkyrc2 file
  copy:
    src: "../files/.conkyrc2"
    dest: "/home/{{ user }}"
    owner: "{{ user }}"
    group: users
    mode: '640'

- name: copy .conkyrc.j2 template
  template:
    src: "../templates/.conkyrc.j2"
    dest: "/home/{{ user }}/.conkyrc"
    owner: "{{ user }}"
    group: users
    mode: '640'

- name: setup conky2 autostart config file
  lineinfile: 
    state: present
    create: yes
    dest: "/home/{{ user }}/.config/autostart/conky2.desktop"
    owner: "{{ user }}"
    group: users
    mode: '750'
    regexp: '^Exec='
    line: "Exec=conky -c /home/{{ user }}/.conkyrc2 --daemonize --pause=1"

- name: touchscreen configurations 
  when: touchscreen|bool == true
  block:
    - name: configure firefox touch scrolling
      lineinfile: 
        state: present
        path: "/etc/security/pam_env.conf"
        regexp: 'MOZ_USE_XINPUT2 DEFAULT=1'
        line: 'MOZ_USE_XINPUT2 DEFAULT=1'

- name: setup games
  block:
    - name: create zfs game datasets
      when: zfs_root|bool == true
      community.general.zfs:
        name: "zroot/DATA/{{ item }}"
        state: present
        extra_zfs_properties:
          canmount: on
          mountpoint: "/{{ item }}"
      loop: "{{ zfs_game_datasets }}"

    - name: create directories or fix ownership on game zfs datasets
      file:
        path: "/{{ item }}"
        state: directory
        owner: "{{ user }}"
        group: users
        mode: '750'
      loop: "{{ zfs_game_datasets }}"
    
    - name: setup package architecture config file
      lineinfile: 
        state: present
        create: yes
        dest: "/var/lib/dpkg/arch"
        regexp: "amd64"
        line: "amd64"

    - name: setup architecture for games
      lineinfile: 
        state: present
        create: yes
        dest: "/var/lib/dpkg/arch"
        regexp: "i386"
        line: "i386"

    - name: update repositories
      apt: 
        update_cache: yes
        upgrade: safe
      changed_when: False

    - name: accept steam license
      debconf:
        name: "steam"
        question: "steam/question"
        value: "I AGREE"
        vtype: "select"

    - name: install game packages
      apt:
        name: "{{ game_apps }}"
        state: latest

- name: setup flatpaks
  block:
    - name: create zfs flatpak datasets
      when: zfs_root|bool == true
      community.general.zfs:
        name: "zroot/DATA/{{ item }}"
        state: present
        extra_zfs_properties:
          canmount: on
          mountpoint: "/{{ item }}"
          sync: "disabled"
      loop: "{{ zfs_flatpak_datasets }}"

    - name: create directories or fix ownership on flatpak zfs datasets
      file:
        path: "/{{ item }}"
        state: directory
        owner: "{{ user }}"
        group: users
        mode: '750'
      loop: "{{ zfs_flatpak_datasets }}"

    - name: install flatpak
      apt:
        name: flatpak
        state: latest

    - name: add the flathub flatpak repository remote to system
      become_user: "{{ user }}"
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        method: user

    - name: add flatpaks to system
      become_user: "{{ user }}"
      community.general.flatpak:
        state: present
        remote: flathub
        method: user
        name: "{{ item }}"
      loop: "{{ flatpak_apps }}"

    - name: setup flatpak discovery in /etc/zsh/zprofile
      lineinfile:
        state: present
        path: "/etc/zsh/zprofile"
        regexp: 'emulate sh -c "source /etc/profile.d/flatpak.sh"'
        line: 'emulate sh -c "source /etc/profile.d/flatpak.sh"'

    - name: create systemd user mode directories
      file:
        path: "/home/{{ user }}/.config/systemd/user/default.target.wants"
        state: directory
        owner: "{{ user }}"
        group: users
        mode: '751'

    - name: copy flatpak update user service
      copy:
        src: "../files/flatpak-update.service"
        dest: "/home/{{ user }}/.config/systemd/user/"
        owner: "{{ user }}"
        group: users
        mode: '640'  

    - name: copy flatpak update user timer
      copy:
        src: "../files/flatpak-update.timer"
        dest: "/home/{{ user }}/.config/systemd/user/"
        owner: "{{ user }}"
        group: users
        mode: '640'  

    - name: enable flatpak update timer for main user
      file:
        src: "/home/{{ user }}/.config/systemd/user/flatpak-update.timer"
        path: "/home/{{ user }}/.config/systemd/user/default.target.wants/flatpak-update.timer"
        state: link
        owner: "{{ user }}"
        group: users

- name: setup dev environment
  block:
    - name: install development packages
      apt:
        name: "{{ dev_apps }}"
        state: latest
    
    - name: create directory path for flatpak configuration file
      file:
        path: "/home/{{ user }}/.var/app/com.vscodium.codium/config/VSCodium/User"
        state: directory
        owner: "{{ user }}"
        group: users
        mode: '750'
        
    - name: copy vscode flatpak configuration file
      copy:
        src: "../files/vscodium/settings.json"
        dest: "/home/{{ user }}/.var/app/com.vscodium.codium/config/VSCodium/User"
        owner: "{{ user }}"
        group: users
        mode: '640'

- name: packages to remove
  apt:  
    name: "{{ remove_packages }}"
    state: absent