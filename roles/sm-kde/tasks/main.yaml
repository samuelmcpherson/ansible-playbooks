---
- name: create zfs user datasets
  when: "{{ zfs_root }}"
  block:
    - name: create .config dataset
      community.general.zfs:
        name: "zroot/DATA/home/{{ user }}/.config"
        state: present
        extra_zfs_properties:
          canmount: on
          mountpoint: "/home/{{ user }}/.config"
    
    - name: create .local/share/plasma dataset
      community.general.zfs:
        name: "zroot/DATA/home/{{ user }}/.local/share/plasma"
        state: present
        extra_zfs_properties:
          canmount: on
          mountpoint: "/home/{{ user }}/.local/share/plasma"

    - name: create flatpak datasets
      include_tasks: zfs-flatpak-datasets.yaml
  
    - name: fix permissions on user home directory
      file:
        path: "/home/{{ user }}"
        state: directory
        owner: "{{ user }}"
        group: users
        recurse: yes

- name: install plasma desktop
  apt:  
    name: 
      - kde-plasma-desktop
      - plasma-workspace-wayland  
    state: latest
    
- name: install extra kde apps
  apt:
    name: "{{ kde_apps }}"
    state: latest

- name: add volian repo gpg key
  apt_key: 
    state: present
    keyring: /etc/apt/trusted.gpg.d/volian-archive-scar-unstable.gpg
    url: https://deb.volian.org/volian/scar.key

- name: add volian repo
  apt_repository: 
    state: present
    filename: /etc/apt/sources.list.d/volian-archive-scar-unstable
    repo: "deb http://deb.volian.org/volian/ scar main"

- name: install bismuth
  apt:  
    name: 
      - kwin-bismuth
    state: latest

- name: add main user to additional groups 
  user:
    name: "{{ user }}"
    groups: 
      - audio
      - video
      - games 
      - input
    append: yes
    create_home: no

- name: add the flathub flatpak repository remote to system
  become: yes
  become_user: "{{ user }}"
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: user

- name: add flatpaks to system
  become: yes
  become_user: "{{ user }}"
  community.general.flatpak:
    state: present
    remote: flathub
    method: user
    name: "{{ item }}"
  loop: "{{ flatpak_apps }}"

- name: enable profile sync daemon service for main user
  ignore_errors: yes
  become: yes
  become_user: "{{ user }}"
  systemd:
    name: psd.service
    enabled: yes
    scope: user

- name: create .local directory
  file:
    path: "/home/{{ user }}/.local"
    state: directory
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: create .local/share directory
  file:
    path: "/home/{{ user }}/.local/share"
    state: directory
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy .local/share/plasma directory
  copy:
    src: "../files/.local/share/plasma"
    dest: "/home/{{ user }}/.local/share"
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy .local/share/aurorae directory
  copy:
    src: "../files/.local/share/aurorae"
    dest: "/home/{{ user }}/.local/share"
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy .local/share/color-schemes directory
  copy:
    src: "../files/.local/share/color-schemes"
    dest: "/home/{{ user }}/.local/share"
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy .local/share/konsole directory
  copy:
    src: "../files/.local/share/konsole"
    dest: "/home/{{ user }}/.local/share"
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy wallpaper
  copy:
    src: "../files/debian-bg-fin.png"
    dest: "/usr/share/wallpapers/debian-bg-fin.png"
    mode: '644'

- name: create .config directory
  file:
    path: "/home/{{ user }}/.config"
    state: directory
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy .config/gtk-3.0 directory
  copy:
    src: "../files/.config/gtk-3.0"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy .config/gtk-4.0 directory
  copy:
    src: "../files/.config/gtk-4.0"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy .config/xsettingsd directory
  copy:
    src: "../files/.config/xsettingsd"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy .config/kdeglobals file
  copy:
    src: "../files/.config/kdeglobals"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '644'

- name: copy .config/kglobalshortcutsrc file
  copy:
    src: "../files/.config/kglobalshortcutsrc"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '644'

- name: copy .config/khotkeysrc file
  copy:
    src: "../files/.config/khotkeysrc"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '644'

- name: copy .config/kscreenlockerrc file
  copy:
    src: "../files/.config/kscreenlockerrc"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '644'

- name: copy .config/ksmserverrc file
  copy:
    src: "../files/.config/ksmserverrc"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '644'

- name: copy .config/kwinrc file
  copy:
    src: "../files/.config/kwinrc"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '644'

- name: copy .config/Trolltech.conf file
  copy:
    src: "../files/.config/Trolltech.conf"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '644'

- name: copy .config/plasma-org.kde.plasma.desktop-appletsrc file
  copy:
    src: "../files/.config/plasma-org.kde.plasma.desktop-appletsrc"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '644'

- name: copy .config/plasmarc file
  copy:
    src: "../files/.config/plasmarc"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '644'

- name: copy .config/plasmashellrc file
  copy:
    src: "../files/.config/plasmashellrc"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '644'

- name: copy .config/autostart directory
  copy:
    src: "../files/.config/autostart"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy .config/gebaar directory
  copy:
    src: "../files/.config/gebaar"
    dest: "/home/{{ user }}/.config"
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy .conkyrc2 file
  copy:
    src: "../files/.conkyrc2"
    dest: "/home/{{ user }}"
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: copy .conkyrc.j2 template
  template:
    src: "../templates/.conkyrc.j2"
    dest: "/home/{{ user }}/.conkyrc"
    owner: "{{ user }}"
    group: users
    mode: '755'

- name: setup konsolerc config file
  lineinfile: 
    state: present
    create: yes
    dest: "/home/{{ user }}/.config/konsolerc"
    owner: "{{ user }}"
    group: users
    mode: '644'
    regexp: '[Desktop Entry][$i]'
    line: '[Desktop Entry][$i]'

- name: setup konsolerc config file
  lineinfile: 
    state: present
    create: yes
    dest: "/home/{{ user }}/.config/konsolerc"
    owner: "{{ user }}"
    group: users
    mode: '644'
    regexp: 'DefaultProfile=Profile 1.profile'
    line: 'DefaultProfile=Profile 1.profile'
      
- name: setup kcminput config file
  lineinfile:
    state: present
    create: yes
    path: "/home/{{ user }}/.config/kcminputrc"
    owner: "{{ user }}"
    group: users
    mode: '644'
    regexp: '[Mouse][$i]'
    line: '[Mouse][$i]'
      
- name: setup kcminput config file
  lineinfile:
    state: present
    create: yes
    path: "/home/{{ user }}/.config/kcminputrc"
    owner: "{{ user }}"
    group: users
    mode: '644'
    regexp: 'cursorTheme=Oxygen_Blue'
    line: 'cursorTheme=Oxygen_Blue'

- name: setup flatpak discovery in /etc/zsh/zprofile
  lineinfile:
    state: present
    path: "/etc/zsh/zprofile"
    regexp: 'emulate sh -c "source /etc/profile.d/flatpak.sh"'
    line: 'emulate sh -c "source /etc/profile.d/flatpak.sh"'

- name: check if gebaard binary exists on system
  stat:
    path: "/usr/local/bin/gebaard"
  register: gebaard_present

- name: pull gebaard repo and make package
  when: gebaard_present.stat.exists == False
  block:
    - name: pull gebaar gestures repo
      git:
        clone: yes
        dest: "/home/{{ user }}/gebaar-libinput"
        repo: https://github.com/NICHOLAS85/gebaar-libinput
        recursive: yes
        update: yes
        force: yes

    - name: "fix library dependancy for gebaar in cpptoml.h"
      lineinfile:
        path: "/home/{{ user }}/gebaar-libinput/libs/cpptoml/include/cpptoml.h"
        insertafter: "^#include"
        line: "#include <limits>"
        state: present

    - name: "fix library dependancy for gebaar in cxxopts.hpp"
      lineinfile:
        path: "/home/{{ user }}/gebaar-libinput/libs/cxxopts/include/cxxopts.hpp"
        insertafter: "^#include"
        line: "#include <limits>"
        state: present

    - name: create gebaar build directory
      file:
        path: "/home/{{ user }}/gebaar-libinput/build"
        state: directory
        owner: "{{ user }}"
        group: users
        mode: '751'

    #cd /home/$USER/gebaar-libinput-fork/build && cmake .. && make -j$(nproc)

    #mkdir -p $TEMPMOUNT/home/$USER/.config/gebaar

    #cp $CONFIGDIR/home/.config/autostart/gebaard.desktop $TEMPMOUNT/home/$USER/.config/autostart

    #echo "Run 'make install' from ~/gebaar-libinput-fork/build on boot"

- name: remove old network configuration
  file:
    path: "/etc/network/interfaces.d"
    state: absent